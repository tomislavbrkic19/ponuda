@model PagedList.IPagedList<Ponuda.Models.Ponude>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}
<script src="~/Scripts/jquery-1.12.4.js"></script>
<style>
    table {
        width: 100%;
    }
    .table-wrapper-scroll-y {
        display: block;
        max-height: 600px;
        overflow-y: auto;
        -ms-overflow-style: -ms-autohiding-scrollbar;
    }
</style>
<h2>Index</h2>
<script src="~/js/Dropdown.js"></script>
<p>
    <a href='/Ponude/CreatePonuda' class='btn btn-sm btn-success'>Kreiraj ponudu</a>
 
</p>


<div class="row">
    <div class="col-md-4">

        <div class="table-wrapper-scroll-y">

            <table class="table table-striped table-bordered table-hover" id="tblPonudeList">
                <tr>
                    <th>
                        Ponuda ID @*@Html.DisplayNameFor(model => model.PonudaID)*@
                    </th>
                    <th>
                        Datum  @*@Html.DisplayNameFor(model => model.UkupnaCijena)*@
                    </th>
                    <th>
                        Cijena @*@Html.DisplayNameFor(model => model.DatumPonude)*@
                    </th>

                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <th>
                            @Html.DisplayFor(model => item.PonudaID)
                        </th>
                        <td>
                            @Html.DisplayFor(modelItem => item.DatumPonude)
                        </td>
                        <td>
                           
                            @Html.DisplayFor(modelItem => item.UkupnaCijena)
                          
                    </tr>

                }


            </table>
        </div>
        <br />
        <div id='Paging' style="text-align:center">
            Stranica @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
            od @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
        </div>
    </div>
    <div class="col-md-8">
        <div class="row" >
            <div class="col-md-4">
                Broj ponude:
                <input type="text" id="PonudaId" disabled>

            </div>
            <div class="col-md-4">
                Datum ponude:
                <input type="text" id="DatumPonude" disabled>

            </div>
            
        </div>
        <div class="row" >
           </br>
            <div class="col-md-4">
                <a class='btn btn-sm btn-info' onclick='StavkaCreate()'>Dodaj stavku</a>
            </div>
            <div class="col-md-4">

            </div>
        </div>
        <div class="row">
            Sadržaj ponude
            <div class="table-responsive">
                <table id="tblPonudaDetails" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Naziv stavke</th>
                            <th>Jedinična cijena</th>
                            <th>Količina</th>
                            <th>Ukupno</th>
                            <th>Uredi</th>
                            <th>Brisanje</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                    </tfoot>

                </table>
            </div>
            <div class="col-md-4 right">
                Ukupni iznos ponude:
                <input type="text" id="UkupnaCijenaPonude" disabled>

            </div>
        </div>


    </div>
</div>
<!--MODAL za Edit STAVKE-->
    <div class="modal fade" id="MyModal">
      
    </div>


    <script>
      
        $(document).ready(function () {
            $("#tblPonudeList tr").click(function () {
                var tableData = $(this).children("th").map(function () {
                    loadPonuda($(this).text());
                }).get();
            });

            function setData(id) {

                var set_data = '';
                var element = $(this);
                var id = element.attr("id");
                $.ajax({
                    url: "/Ponude/Details/" + id,
                    method: "post",
                    async: false,
                    data: { id: id },
                    success: function (data) {
                        set_data = data;
                    }

                });
                return set_data;
            }
        });
        function loadPonuda(id) {
            $.ajax({
                url: '/api/Data/' + id,
                dataType: "json",
                type: "Get",
                async: false,
                success: function (data) {


                    console.log('Loaded data for id:' + id);
                    console.log(data);
                    populateFields(data);
                },
                error: function (xhr) {
                    alert('No Valid Data');
                }
            });

        };
        function populateFields(data) {

            $("#DatumPonude").val(data[0].DatumPonude);
            $("#PonudaId").val(data[0].PonudaID);
            $("#UkupnaCijenaPonude").val(data[0].UkupnaCijena);
            $("#tblPonudaDetails > TBODY").empty();
            var tBody = $("#tblPonudaDetails > TBODY")[0];

            for (var i = 0; i < data[0].Stavke.length; i++) {
                var StavkaNaziv = data[0].Stavke[i].Artikli.NazivArtikla;
                var StavkaJedCijena = data[0].Stavke[i].Artikli.JedCijenaArtikla;
                var StavkaKolicina = data[0].Stavke[i].Kolicina;
                var StavkaUkupnaCijena = data[0].Stavke[i].UkupnaCijenaStavke;
                var StavkaID = data[0].Stavke[i].StavkaId;



                //Add Row.
                var row = tBody.insertRow(-1);

                cell = $(row.insertCell(-1));
                var labelStavka = document.createElement("input");
                labelStavka.setAttribute("disabled", "disabled");
                labelStavka.className = "form-control";
                labelStavka.value = StavkaNaziv;
                cell.append(labelStavka);

                cell = $(row.insertCell(-1));
                var labelStavkaJedCijena = document.createElement("input");
                labelStavkaJedCijena.setAttribute("disabled", "disabled");
                labelStavkaJedCijena.className = "form-control";
                labelStavkaJedCijena.value = StavkaJedCijena;
                cell.append(labelStavkaJedCijena);

                cell = $(row.insertCell(-1));
                var labelStavkaKolicina = document.createElement("input");
                labelStavkaKolicina.setAttribute("disabled", "disabled");
                labelStavkaKolicina.className = "form-control";
                labelStavkaKolicina.value = StavkaKolicina;
                cell.append(labelStavkaKolicina);

                cell = $(row.insertCell(-1));
                var labelStavkaUkupnaCijena = document.createElement("input");
                labelStavkaUkupnaCijena.setAttribute("disabled", "disabled");
                labelStavkaUkupnaCijena.className = "form-control";
                labelStavkaUkupnaCijena.value = StavkaUkupnaCijena;
                cell.append(labelStavkaUkupnaCijena);

                //Add Edit Button cell.
                cell = $(row.insertCell(-1));
                var btnEdit = $("<input />");
                btnEdit.attr("class", "btn btn-sm btn-success");
                btnEdit.attr("type", "button");
                btnEdit.attr("onclick", "StavkaEdit(" + StavkaID + ");");
                btnEdit.val("Uredi");
                cell.append(btnEdit);

                //Add Remove Button cell.
                cell = $(row.insertCell(-1));
                var btnRemove = $("<input />");
                btnRemove.attr("class", "btn btn-sm btn-danger");
                btnRemove.attr("type", "button");
                btnRemove.attr("onclick", "Remove('"+StavkaID+"');");
                btnRemove.val("Remove");
                cell.append(btnRemove);




            };

        };
        function Remove( StavkaID) {
            if (confirm("Da li želite obrisati stavku")) {
                var url = "/Ponude/Delete?Stavkaid=" + StavkaID;
                $.get(url, function () {
                    location.reload();
                });
            }
        };
        function StavkaEdit(StavkaID) {
            console.log('StavkaID=' + StavkaID);
            //var url = "/api/Data/GetStavkaById?StavkaId=" + StavkaID;
          
            $.get(url, function (partialView) {
                $("#MyModal").html(partialView);
                $("#MyModal").modal();
            });

        };
        function StavkaCreate() {
            var ponudaId = $("#PonudaId").val();
            console.log(ponudaId);
            if (ponudaId >0) {
                var url = "/Ponude/StavkaCreate?PonudaId="+ponudaId;
                $.get(url, function (partialView) {
                    $("#MyModal").html(partialView);
                    $("#MyModal").modal();
                });
            } else {
                alert('Odaberite ponudu!');
            }
            

        };
        function PonudaSave() {

        };


    </script>


